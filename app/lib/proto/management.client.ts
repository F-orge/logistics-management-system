// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "management.proto" (package "management", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { HumanResourceService } from "./management";
import type { RemovePANInformationRequest } from "./management";
import type { RejectPANRequest } from "./management";
import type { ApprovePANRequest } from "./management";
import type { ChangePANEffectiveDateRequest } from "./management";
import type { ChangePANNewValueRequest } from "./management";
import type { ChangePANOldValueRequest } from "./management";
import type { ChangePANActionTypeRequest } from "./management";
import type { PersonnelAction } from "./management";
import type { GetPANInformationRequest } from "./management";
import type { CreatePANRequest } from "./management";
import type { RemoveEmergencyInformationHealthConditionRequest } from "./management";
import type { RemoveEmergencyInformationRequest } from "./management";
import type { ChangeEmergencyInformationContactNameRequest } from "./management";
import type { ChangeEmergencyInformationMobileNumberRequest } from "./management";
import type { ChangeEmergencyInformationTelNumberRequest } from "./management";
import type { ChangeEmergencyInformationAddressRequest } from "./management";
import type { EmployeeEmergencyInformation } from "./management";
import type { GetEmergencyInformationRequest } from "./management";
import type { AddEmergencyInformationHealthConditionRequest } from "./management";
import type { CreateEmergencyInformationRequest } from "./management";
import type { RemoveJobInformationRequest } from "./management";
import type { ChangeJobCurrencyRequest } from "./management";
import type { ChangeJobSalaryRequest } from "./management";
import type { ChangeJobStartDateRequest } from "./management";
import type { ChangeJobWorkLocationRequest } from "./management";
import type { ChangeJobSupervisorRequest } from "./management";
import type { ChangeJobDepartmentRequest } from "./management";
import type { ChangeJobTitleRequest } from "./management";
import type { JobInformation } from "./management";
import type { GetJobInformationRequest } from "./management";
import type { CreateJobInformationRequest } from "./management";
import type { RemoveEmployeeFromDepartmentRequest } from "./management";
import type { RemoveDepartmentRequest } from "./management";
import type { UpdateDepartmentDescriptionRequest } from "./management";
import type { UpdateDepartmentNameRequest } from "./management";
import type { Department } from "./management";
import type { GetDepartmentRequest } from "./management";
import type { AddEmployeeToDepartmentRequest } from "./management";
import type { CreateDepartmentRequest } from "./management";
import type { RemoveLearningInstitutionRequest } from "./management";
import type { RemoveSpecialInterestRequest } from "./management";
import type { RemoveEmployeeRequest } from "./management";
import type { ChangeSpouseEmployerRequest } from "./management";
import type { ChangeSpouseLastNameRequest } from "./management";
import type { ChangeSpouseMiddleNameRequest } from "./management";
import type { ChangeSpouseFirstNameRequest } from "./management";
import type { ChangeBirthDateRequest } from "./management";
import type { ChangePhilNatIDRequest } from "./management";
import type { ChangeEmployeeContractTypeRequest } from "./management";
import type { ChangeEmployeeStatusRequest } from "./management";
import type { ChangeEmployeeRoleRequest } from "./management";
import type { ChangeEmployeeEmailRequest } from "./management";
import type { ChangeEmployeeMobileNumberRequest } from "./management";
import type { ChangeEmployeeTelNumberRequest } from "./management";
import type { ChangeEmployeeLastNameRequest } from "./management";
import type { ChangeEmployeeMiddleNameRequest } from "./management";
import type { ChangeEmployeeFirstNameRequest } from "./management";
import type { ChangeEmployeeCoverPhotoRequest } from "./management";
import type { ChangeEmployeeAvatarRequest } from "./management";
import type { GetEmployeesByDepartmentRequest } from "./management";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { Employee } from "./management";
import type { GetEmployeeRequest } from "./management";
import type { AddLearningInstitutionRequest } from "./management";
import type { AddSpecialInterestRequest } from "./management";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Empty } from "./google/protobuf/empty";
import type { CreateEmployeeRequest } from "./management";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service management.HumanResourceService
 */
export interface IHumanResourceServiceClient {
    // employee

    /**
     * -- insert
     *
     * @generated from protobuf rpc: CreateEmployee(management.CreateEmployeeRequest) returns (google.protobuf.Empty);
     */
    createEmployee(input: CreateEmployeeRequest, options?: RpcOptions): UnaryCall<CreateEmployeeRequest, Empty>;
    /**
     * @generated from protobuf rpc: CreateManager(management.CreateEmployeeRequest) returns (google.protobuf.Empty);
     */
    createManager(input: CreateEmployeeRequest, options?: RpcOptions): UnaryCall<CreateEmployeeRequest, Empty>;
    /**
     * @generated from protobuf rpc: CreateAdmin(management.CreateEmployeeRequest) returns (google.protobuf.Empty);
     */
    createAdmin(input: CreateEmployeeRequest, options?: RpcOptions): UnaryCall<CreateEmployeeRequest, Empty>;
    /**
     * @generated from protobuf rpc: AddSpecialInterest(management.AddSpecialInterestRequest) returns (google.protobuf.Empty);
     */
    addSpecialInterest(input: AddSpecialInterestRequest, options?: RpcOptions): UnaryCall<AddSpecialInterestRequest, Empty>;
    /**
     * @generated from protobuf rpc: AddLearningInstitution(management.AddLearningInstitutionRequest) returns (google.protobuf.Empty);
     */
    addLearningInstitution(input: AddLearningInstitutionRequest, options?: RpcOptions): UnaryCall<AddLearningInstitutionRequest, Empty>;
    /**
     * -- read
     *
     * @generated from protobuf rpc: GetEmployee(management.GetEmployeeRequest) returns (management.Employee);
     */
    getEmployee(input: GetEmployeeRequest, options?: RpcOptions): UnaryCall<GetEmployeeRequest, Employee>;
    /**
     * @generated from protobuf rpc: GetEmployeesByDepartment(management.GetEmployeesByDepartmentRequest) returns (stream management.Employee);
     */
    getEmployeesByDepartment(input: GetEmployeesByDepartmentRequest, options?: RpcOptions): ServerStreamingCall<GetEmployeesByDepartmentRequest, Employee>;
    /**
     * -- update
     *
     * @generated from protobuf rpc: ChangeEmployeeAvatar(management.ChangeEmployeeAvatarRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeAvatar(input: ChangeEmployeeAvatarRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeAvatarRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmployeeCoverPhoto(management.ChangeEmployeeCoverPhotoRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeCoverPhoto(input: ChangeEmployeeCoverPhotoRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeCoverPhotoRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmployeeFirstName(management.ChangeEmployeeFirstNameRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeFirstName(input: ChangeEmployeeFirstNameRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeFirstNameRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmployeeMiddleName(management.ChangeEmployeeMiddleNameRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeMiddleName(input: ChangeEmployeeMiddleNameRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeMiddleNameRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmployeeLastName(management.ChangeEmployeeLastNameRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeLastName(input: ChangeEmployeeLastNameRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeLastNameRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmployeeTelNumber(management.ChangeEmployeeTelNumberRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeTelNumber(input: ChangeEmployeeTelNumberRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeTelNumberRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmployeeMobileNumber(management.ChangeEmployeeMobileNumberRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeMobileNumber(input: ChangeEmployeeMobileNumberRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeMobileNumberRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmployeeEmail(management.ChangeEmployeeEmailRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeEmail(input: ChangeEmployeeEmailRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeEmailRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmployeeRole(management.ChangeEmployeeRoleRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeRole(input: ChangeEmployeeRoleRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeRoleRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmployeeStatus(management.ChangeEmployeeStatusRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeStatus(input: ChangeEmployeeStatusRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeStatusRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmployeeContractType(management.ChangeEmployeeContractTypeRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeContractType(input: ChangeEmployeeContractTypeRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeContractTypeRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangePhilNatID(management.ChangePhilNatIDRequest) returns (google.protobuf.Empty);
     */
    changePhilNatID(input: ChangePhilNatIDRequest, options?: RpcOptions): UnaryCall<ChangePhilNatIDRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeBirthDate(management.ChangeBirthDateRequest) returns (google.protobuf.Empty);
     */
    changeBirthDate(input: ChangeBirthDateRequest, options?: RpcOptions): UnaryCall<ChangeBirthDateRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeSpouseFirstName(management.ChangeSpouseFirstNameRequest) returns (google.protobuf.Empty);
     */
    changeSpouseFirstName(input: ChangeSpouseFirstNameRequest, options?: RpcOptions): UnaryCall<ChangeSpouseFirstNameRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeSpouseMiddleName(management.ChangeSpouseMiddleNameRequest) returns (google.protobuf.Empty);
     */
    changeSpouseMiddleName(input: ChangeSpouseMiddleNameRequest, options?: RpcOptions): UnaryCall<ChangeSpouseMiddleNameRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeSpouseLastName(management.ChangeSpouseLastNameRequest) returns (google.protobuf.Empty);
     */
    changeSpouseLastName(input: ChangeSpouseLastNameRequest, options?: RpcOptions): UnaryCall<ChangeSpouseLastNameRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeSpouseEmployer(management.ChangeSpouseEmployerRequest) returns (google.protobuf.Empty);
     */
    changeSpouseEmployer(input: ChangeSpouseEmployerRequest, options?: RpcOptions): UnaryCall<ChangeSpouseEmployerRequest, Empty>;
    /**
     * -- delete
     *
     * @generated from protobuf rpc: RemoveEmployee(management.RemoveEmployeeRequest) returns (google.protobuf.Empty);
     */
    removeEmployee(input: RemoveEmployeeRequest, options?: RpcOptions): UnaryCall<RemoveEmployeeRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveSpecialInterest(management.RemoveSpecialInterestRequest) returns (google.protobuf.Empty);
     */
    removeSpecialInterest(input: RemoveSpecialInterestRequest, options?: RpcOptions): UnaryCall<RemoveSpecialInterestRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveLearningInstitition(management.RemoveLearningInstitutionRequest) returns (google.protobuf.Empty);
     */
    removeLearningInstitition(input: RemoveLearningInstitutionRequest, options?: RpcOptions): UnaryCall<RemoveLearningInstitutionRequest, Empty>;
    // department

    /**
     * -- insert
     *
     * @generated from protobuf rpc: CreateDepartment(management.CreateDepartmentRequest) returns (google.protobuf.Empty);
     */
    createDepartment(input: CreateDepartmentRequest, options?: RpcOptions): UnaryCall<CreateDepartmentRequest, Empty>;
    /**
     * @generated from protobuf rpc: AddEmployeeToDepartment(management.AddEmployeeToDepartmentRequest) returns (google.protobuf.Empty);
     */
    addEmployeeToDepartment(input: AddEmployeeToDepartmentRequest, options?: RpcOptions): UnaryCall<AddEmployeeToDepartmentRequest, Empty>;
    /**
     * -- read
     *
     * @generated from protobuf rpc: GetDepartment(management.GetDepartmentRequest) returns (management.Department);
     */
    getDepartment(input: GetDepartmentRequest, options?: RpcOptions): UnaryCall<GetDepartmentRequest, Department>;
    /**
     * -- update
     *
     * @generated from protobuf rpc: UpdateDepartmentName(management.UpdateDepartmentNameRequest) returns (google.protobuf.Empty);
     */
    updateDepartmentName(input: UpdateDepartmentNameRequest, options?: RpcOptions): UnaryCall<UpdateDepartmentNameRequest, Empty>;
    /**
     * @generated from protobuf rpc: UpdateDepartmentDescription(management.UpdateDepartmentDescriptionRequest) returns (google.protobuf.Empty);
     */
    updateDepartmentDescription(input: UpdateDepartmentDescriptionRequest, options?: RpcOptions): UnaryCall<UpdateDepartmentDescriptionRequest, Empty>;
    /**
     * -- delete
     *
     * @generated from protobuf rpc: RemoveDepartment(management.RemoveDepartmentRequest) returns (google.protobuf.Empty);
     */
    removeDepartment(input: RemoveDepartmentRequest, options?: RpcOptions): UnaryCall<RemoveDepartmentRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveEmployeeToDepartment(management.RemoveEmployeeFromDepartmentRequest) returns (google.protobuf.Empty);
     */
    removeEmployeeToDepartment(input: RemoveEmployeeFromDepartmentRequest, options?: RpcOptions): UnaryCall<RemoveEmployeeFromDepartmentRequest, Empty>;
    /**
     * job information
     * -- insert
     *
     * @generated from protobuf rpc: CreateJobInformation(management.CreateJobInformationRequest) returns (google.protobuf.Empty);
     */
    createJobInformation(input: CreateJobInformationRequest, options?: RpcOptions): UnaryCall<CreateJobInformationRequest, Empty>;
    /**
     * -- read
     *
     * @generated from protobuf rpc: GetJobInformation(management.GetJobInformationRequest) returns (management.JobInformation);
     */
    getJobInformation(input: GetJobInformationRequest, options?: RpcOptions): UnaryCall<GetJobInformationRequest, JobInformation>;
    /**
     * -- update
     *
     * @generated from protobuf rpc: ChangeJobTitle(management.ChangeJobTitleRequest) returns (google.protobuf.Empty);
     */
    changeJobTitle(input: ChangeJobTitleRequest, options?: RpcOptions): UnaryCall<ChangeJobTitleRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeJobDepartment(management.ChangeJobDepartmentRequest) returns (google.protobuf.Empty);
     */
    changeJobDepartment(input: ChangeJobDepartmentRequest, options?: RpcOptions): UnaryCall<ChangeJobDepartmentRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeJobSupervisor(management.ChangeJobSupervisorRequest) returns (google.protobuf.Empty);
     */
    changeJobSupervisor(input: ChangeJobSupervisorRequest, options?: RpcOptions): UnaryCall<ChangeJobSupervisorRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeJobWorkLocation(management.ChangeJobWorkLocationRequest) returns (google.protobuf.Empty);
     */
    changeJobWorkLocation(input: ChangeJobWorkLocationRequest, options?: RpcOptions): UnaryCall<ChangeJobWorkLocationRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeJobStartDate(management.ChangeJobStartDateRequest) returns (google.protobuf.Empty);
     */
    changeJobStartDate(input: ChangeJobStartDateRequest, options?: RpcOptions): UnaryCall<ChangeJobStartDateRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeJobSalary(management.ChangeJobSalaryRequest) returns (google.protobuf.Empty);
     */
    changeJobSalary(input: ChangeJobSalaryRequest, options?: RpcOptions): UnaryCall<ChangeJobSalaryRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeJobCurrency(management.ChangeJobCurrencyRequest) returns (google.protobuf.Empty);
     */
    changeJobCurrency(input: ChangeJobCurrencyRequest, options?: RpcOptions): UnaryCall<ChangeJobCurrencyRequest, Empty>;
    /**
     * -- delete
     *
     * @generated from protobuf rpc: RemoveJobInformation(management.RemoveJobInformationRequest) returns (google.protobuf.Empty);
     */
    removeJobInformation(input: RemoveJobInformationRequest, options?: RpcOptions): UnaryCall<RemoveJobInformationRequest, Empty>;
    // emergency information

    /**
     * -- insert
     *
     * @generated from protobuf rpc: CreateEmergencyInformation(management.CreateEmergencyInformationRequest) returns (google.protobuf.Empty);
     */
    createEmergencyInformation(input: CreateEmergencyInformationRequest, options?: RpcOptions): UnaryCall<CreateEmergencyInformationRequest, Empty>;
    /**
     * @generated from protobuf rpc: AddEmergencyInformationHealthCondition(management.AddEmergencyInformationHealthConditionRequest) returns (google.protobuf.Empty);
     */
    addEmergencyInformationHealthCondition(input: AddEmergencyInformationHealthConditionRequest, options?: RpcOptions): UnaryCall<AddEmergencyInformationHealthConditionRequest, Empty>;
    /**
     * -- read
     *
     * @generated from protobuf rpc: GetEmergencyInformation(management.GetEmergencyInformationRequest) returns (management.EmployeeEmergencyInformation);
     */
    getEmergencyInformation(input: GetEmergencyInformationRequest, options?: RpcOptions): UnaryCall<GetEmergencyInformationRequest, EmployeeEmergencyInformation>;
    /**
     * -- update
     *
     * @generated from protobuf rpc: ChangeEmergencyInformationAddress(management.ChangeEmergencyInformationAddressRequest) returns (google.protobuf.Empty);
     */
    changeEmergencyInformationAddress(input: ChangeEmergencyInformationAddressRequest, options?: RpcOptions): UnaryCall<ChangeEmergencyInformationAddressRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmergencyInformationTelNumber(management.ChangeEmergencyInformationTelNumberRequest) returns (google.protobuf.Empty);
     */
    changeEmergencyInformationTelNumber(input: ChangeEmergencyInformationTelNumberRequest, options?: RpcOptions): UnaryCall<ChangeEmergencyInformationTelNumberRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmergencyInformationMobileNumber(management.ChangeEmergencyInformationMobileNumberRequest) returns (google.protobuf.Empty);
     */
    changeEmergencyInformationMobileNumber(input: ChangeEmergencyInformationMobileNumberRequest, options?: RpcOptions): UnaryCall<ChangeEmergencyInformationMobileNumberRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangeEmergencyInformationContactName(management.ChangeEmergencyInformationContactNameRequest) returns (google.protobuf.Empty);
     */
    changeEmergencyInformationContactName(input: ChangeEmergencyInformationContactNameRequest, options?: RpcOptions): UnaryCall<ChangeEmergencyInformationContactNameRequest, Empty>;
    /**
     * -- delete
     *
     * @generated from protobuf rpc: RemoveEmergencyInformation(management.RemoveEmergencyInformationRequest) returns (google.protobuf.Empty);
     */
    removeEmergencyInformation(input: RemoveEmergencyInformationRequest, options?: RpcOptions): UnaryCall<RemoveEmergencyInformationRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemoveEmergencyInformationHealthCondition(management.RemoveEmergencyInformationHealthConditionRequest) returns (google.protobuf.Empty);
     */
    removeEmergencyInformationHealthCondition(input: RemoveEmergencyInformationHealthConditionRequest, options?: RpcOptions): UnaryCall<RemoveEmergencyInformationHealthConditionRequest, Empty>;
    // personnel action notice

    /**
     * -- insert
     *
     * @generated from protobuf rpc: CreatePANEmployeeRequest(management.CreatePANRequest) returns (google.protobuf.Empty);
     */
    createPANEmployeeRequest(input: CreatePANRequest, options?: RpcOptions): UnaryCall<CreatePANRequest, Empty>;
    /**
     * -- read
     *
     * @generated from protobuf rpc: GetPANInformation(management.GetPANInformationRequest) returns (management.PersonnelAction);
     */
    getPANInformation(input: GetPANInformationRequest, options?: RpcOptions): UnaryCall<GetPANInformationRequest, PersonnelAction>;
    /**
     * -- update
     *
     * @generated from protobuf rpc: ChangePANActionType(management.ChangePANActionTypeRequest) returns (google.protobuf.Empty);
     */
    changePANActionType(input: ChangePANActionTypeRequest, options?: RpcOptions): UnaryCall<ChangePANActionTypeRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangePANOldValue(management.ChangePANOldValueRequest) returns (google.protobuf.Empty);
     */
    changePANOldValue(input: ChangePANOldValueRequest, options?: RpcOptions): UnaryCall<ChangePANOldValueRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangePANNewValue(management.ChangePANNewValueRequest) returns (google.protobuf.Empty);
     */
    changePANNewValue(input: ChangePANNewValueRequest, options?: RpcOptions): UnaryCall<ChangePANNewValueRequest, Empty>;
    /**
     * @generated from protobuf rpc: ChangePANEffectiveDate(management.ChangePANEffectiveDateRequest) returns (google.protobuf.Empty);
     */
    changePANEffectiveDate(input: ChangePANEffectiveDateRequest, options?: RpcOptions): UnaryCall<ChangePANEffectiveDateRequest, Empty>;
    /**
     * @generated from protobuf rpc: ApprovePAN(management.ApprovePANRequest) returns (google.protobuf.Empty);
     */
    approvePAN(input: ApprovePANRequest, options?: RpcOptions): UnaryCall<ApprovePANRequest, Empty>;
    /**
     * @generated from protobuf rpc: RejectPAN(management.RejectPANRequest) returns (google.protobuf.Empty);
     */
    rejectPAN(input: RejectPANRequest, options?: RpcOptions): UnaryCall<RejectPANRequest, Empty>;
    /**
     * @generated from protobuf rpc: RemovePANInformation(management.RemovePANInformationRequest) returns (google.protobuf.Empty);
     */
    removePANInformation(input: RemovePANInformationRequest, options?: RpcOptions): UnaryCall<RemovePANInformationRequest, Empty>;
}
/**
 * @generated from protobuf service management.HumanResourceService
 */
export class HumanResourceServiceClient implements IHumanResourceServiceClient, ServiceInfo {
    typeName = HumanResourceService.typeName;
    methods = HumanResourceService.methods;
    options = HumanResourceService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    // employee

    /**
     * -- insert
     *
     * @generated from protobuf rpc: CreateEmployee(management.CreateEmployeeRequest) returns (google.protobuf.Empty);
     */
    createEmployee(input: CreateEmployeeRequest, options?: RpcOptions): UnaryCall<CreateEmployeeRequest, Empty> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateEmployeeRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateManager(management.CreateEmployeeRequest) returns (google.protobuf.Empty);
     */
    createManager(input: CreateEmployeeRequest, options?: RpcOptions): UnaryCall<CreateEmployeeRequest, Empty> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateEmployeeRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateAdmin(management.CreateEmployeeRequest) returns (google.protobuf.Empty);
     */
    createAdmin(input: CreateEmployeeRequest, options?: RpcOptions): UnaryCall<CreateEmployeeRequest, Empty> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateEmployeeRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddSpecialInterest(management.AddSpecialInterestRequest) returns (google.protobuf.Empty);
     */
    addSpecialInterest(input: AddSpecialInterestRequest, options?: RpcOptions): UnaryCall<AddSpecialInterestRequest, Empty> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddSpecialInterestRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddLearningInstitution(management.AddLearningInstitutionRequest) returns (google.protobuf.Empty);
     */
    addLearningInstitution(input: AddLearningInstitutionRequest, options?: RpcOptions): UnaryCall<AddLearningInstitutionRequest, Empty> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddLearningInstitutionRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * -- read
     *
     * @generated from protobuf rpc: GetEmployee(management.GetEmployeeRequest) returns (management.Employee);
     */
    getEmployee(input: GetEmployeeRequest, options?: RpcOptions): UnaryCall<GetEmployeeRequest, Employee> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetEmployeeRequest, Employee>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetEmployeesByDepartment(management.GetEmployeesByDepartmentRequest) returns (stream management.Employee);
     */
    getEmployeesByDepartment(input: GetEmployeesByDepartmentRequest, options?: RpcOptions): ServerStreamingCall<GetEmployeesByDepartmentRequest, Employee> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetEmployeesByDepartmentRequest, Employee>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * -- update
     *
     * @generated from protobuf rpc: ChangeEmployeeAvatar(management.ChangeEmployeeAvatarRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeAvatar(input: ChangeEmployeeAvatarRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeAvatarRequest, Empty> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeAvatarRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmployeeCoverPhoto(management.ChangeEmployeeCoverPhotoRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeCoverPhoto(input: ChangeEmployeeCoverPhotoRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeCoverPhotoRequest, Empty> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeCoverPhotoRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmployeeFirstName(management.ChangeEmployeeFirstNameRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeFirstName(input: ChangeEmployeeFirstNameRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeFirstNameRequest, Empty> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeFirstNameRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmployeeMiddleName(management.ChangeEmployeeMiddleNameRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeMiddleName(input: ChangeEmployeeMiddleNameRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeMiddleNameRequest, Empty> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeMiddleNameRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmployeeLastName(management.ChangeEmployeeLastNameRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeLastName(input: ChangeEmployeeLastNameRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeLastNameRequest, Empty> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeLastNameRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmployeeTelNumber(management.ChangeEmployeeTelNumberRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeTelNumber(input: ChangeEmployeeTelNumberRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeTelNumberRequest, Empty> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeTelNumberRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmployeeMobileNumber(management.ChangeEmployeeMobileNumberRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeMobileNumber(input: ChangeEmployeeMobileNumberRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeMobileNumberRequest, Empty> {
        const method = this.methods[13], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeMobileNumberRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmployeeEmail(management.ChangeEmployeeEmailRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeEmail(input: ChangeEmployeeEmailRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeEmailRequest, Empty> {
        const method = this.methods[14], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeEmailRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmployeeRole(management.ChangeEmployeeRoleRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeRole(input: ChangeEmployeeRoleRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeRoleRequest, Empty> {
        const method = this.methods[15], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeRoleRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmployeeStatus(management.ChangeEmployeeStatusRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeStatus(input: ChangeEmployeeStatusRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeStatusRequest, Empty> {
        const method = this.methods[16], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeStatusRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmployeeContractType(management.ChangeEmployeeContractTypeRequest) returns (google.protobuf.Empty);
     */
    changeEmployeeContractType(input: ChangeEmployeeContractTypeRequest, options?: RpcOptions): UnaryCall<ChangeEmployeeContractTypeRequest, Empty> {
        const method = this.methods[17], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmployeeContractTypeRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangePhilNatID(management.ChangePhilNatIDRequest) returns (google.protobuf.Empty);
     */
    changePhilNatID(input: ChangePhilNatIDRequest, options?: RpcOptions): UnaryCall<ChangePhilNatIDRequest, Empty> {
        const method = this.methods[18], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangePhilNatIDRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeBirthDate(management.ChangeBirthDateRequest) returns (google.protobuf.Empty);
     */
    changeBirthDate(input: ChangeBirthDateRequest, options?: RpcOptions): UnaryCall<ChangeBirthDateRequest, Empty> {
        const method = this.methods[19], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeBirthDateRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeSpouseFirstName(management.ChangeSpouseFirstNameRequest) returns (google.protobuf.Empty);
     */
    changeSpouseFirstName(input: ChangeSpouseFirstNameRequest, options?: RpcOptions): UnaryCall<ChangeSpouseFirstNameRequest, Empty> {
        const method = this.methods[20], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeSpouseFirstNameRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeSpouseMiddleName(management.ChangeSpouseMiddleNameRequest) returns (google.protobuf.Empty);
     */
    changeSpouseMiddleName(input: ChangeSpouseMiddleNameRequest, options?: RpcOptions): UnaryCall<ChangeSpouseMiddleNameRequest, Empty> {
        const method = this.methods[21], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeSpouseMiddleNameRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeSpouseLastName(management.ChangeSpouseLastNameRequest) returns (google.protobuf.Empty);
     */
    changeSpouseLastName(input: ChangeSpouseLastNameRequest, options?: RpcOptions): UnaryCall<ChangeSpouseLastNameRequest, Empty> {
        const method = this.methods[22], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeSpouseLastNameRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeSpouseEmployer(management.ChangeSpouseEmployerRequest) returns (google.protobuf.Empty);
     */
    changeSpouseEmployer(input: ChangeSpouseEmployerRequest, options?: RpcOptions): UnaryCall<ChangeSpouseEmployerRequest, Empty> {
        const method = this.methods[23], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeSpouseEmployerRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * -- delete
     *
     * @generated from protobuf rpc: RemoveEmployee(management.RemoveEmployeeRequest) returns (google.protobuf.Empty);
     */
    removeEmployee(input: RemoveEmployeeRequest, options?: RpcOptions): UnaryCall<RemoveEmployeeRequest, Empty> {
        const method = this.methods[24], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveEmployeeRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveSpecialInterest(management.RemoveSpecialInterestRequest) returns (google.protobuf.Empty);
     */
    removeSpecialInterest(input: RemoveSpecialInterestRequest, options?: RpcOptions): UnaryCall<RemoveSpecialInterestRequest, Empty> {
        const method = this.methods[25], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveSpecialInterestRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveLearningInstitition(management.RemoveLearningInstitutionRequest) returns (google.protobuf.Empty);
     */
    removeLearningInstitition(input: RemoveLearningInstitutionRequest, options?: RpcOptions): UnaryCall<RemoveLearningInstitutionRequest, Empty> {
        const method = this.methods[26], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveLearningInstitutionRequest, Empty>("unary", this._transport, method, opt, input);
    }
    // department

    /**
     * -- insert
     *
     * @generated from protobuf rpc: CreateDepartment(management.CreateDepartmentRequest) returns (google.protobuf.Empty);
     */
    createDepartment(input: CreateDepartmentRequest, options?: RpcOptions): UnaryCall<CreateDepartmentRequest, Empty> {
        const method = this.methods[27], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateDepartmentRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddEmployeeToDepartment(management.AddEmployeeToDepartmentRequest) returns (google.protobuf.Empty);
     */
    addEmployeeToDepartment(input: AddEmployeeToDepartmentRequest, options?: RpcOptions): UnaryCall<AddEmployeeToDepartmentRequest, Empty> {
        const method = this.methods[28], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddEmployeeToDepartmentRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * -- read
     *
     * @generated from protobuf rpc: GetDepartment(management.GetDepartmentRequest) returns (management.Department);
     */
    getDepartment(input: GetDepartmentRequest, options?: RpcOptions): UnaryCall<GetDepartmentRequest, Department> {
        const method = this.methods[29], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetDepartmentRequest, Department>("unary", this._transport, method, opt, input);
    }
    /**
     * -- update
     *
     * @generated from protobuf rpc: UpdateDepartmentName(management.UpdateDepartmentNameRequest) returns (google.protobuf.Empty);
     */
    updateDepartmentName(input: UpdateDepartmentNameRequest, options?: RpcOptions): UnaryCall<UpdateDepartmentNameRequest, Empty> {
        const method = this.methods[30], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateDepartmentNameRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateDepartmentDescription(management.UpdateDepartmentDescriptionRequest) returns (google.protobuf.Empty);
     */
    updateDepartmentDescription(input: UpdateDepartmentDescriptionRequest, options?: RpcOptions): UnaryCall<UpdateDepartmentDescriptionRequest, Empty> {
        const method = this.methods[31], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateDepartmentDescriptionRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * -- delete
     *
     * @generated from protobuf rpc: RemoveDepartment(management.RemoveDepartmentRequest) returns (google.protobuf.Empty);
     */
    removeDepartment(input: RemoveDepartmentRequest, options?: RpcOptions): UnaryCall<RemoveDepartmentRequest, Empty> {
        const method = this.methods[32], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveDepartmentRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveEmployeeToDepartment(management.RemoveEmployeeFromDepartmentRequest) returns (google.protobuf.Empty);
     */
    removeEmployeeToDepartment(input: RemoveEmployeeFromDepartmentRequest, options?: RpcOptions): UnaryCall<RemoveEmployeeFromDepartmentRequest, Empty> {
        const method = this.methods[33], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveEmployeeFromDepartmentRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * job information
     * -- insert
     *
     * @generated from protobuf rpc: CreateJobInformation(management.CreateJobInformationRequest) returns (google.protobuf.Empty);
     */
    createJobInformation(input: CreateJobInformationRequest, options?: RpcOptions): UnaryCall<CreateJobInformationRequest, Empty> {
        const method = this.methods[34], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateJobInformationRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * -- read
     *
     * @generated from protobuf rpc: GetJobInformation(management.GetJobInformationRequest) returns (management.JobInformation);
     */
    getJobInformation(input: GetJobInformationRequest, options?: RpcOptions): UnaryCall<GetJobInformationRequest, JobInformation> {
        const method = this.methods[35], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetJobInformationRequest, JobInformation>("unary", this._transport, method, opt, input);
    }
    /**
     * -- update
     *
     * @generated from protobuf rpc: ChangeJobTitle(management.ChangeJobTitleRequest) returns (google.protobuf.Empty);
     */
    changeJobTitle(input: ChangeJobTitleRequest, options?: RpcOptions): UnaryCall<ChangeJobTitleRequest, Empty> {
        const method = this.methods[36], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeJobTitleRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeJobDepartment(management.ChangeJobDepartmentRequest) returns (google.protobuf.Empty);
     */
    changeJobDepartment(input: ChangeJobDepartmentRequest, options?: RpcOptions): UnaryCall<ChangeJobDepartmentRequest, Empty> {
        const method = this.methods[37], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeJobDepartmentRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeJobSupervisor(management.ChangeJobSupervisorRequest) returns (google.protobuf.Empty);
     */
    changeJobSupervisor(input: ChangeJobSupervisorRequest, options?: RpcOptions): UnaryCall<ChangeJobSupervisorRequest, Empty> {
        const method = this.methods[38], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeJobSupervisorRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeJobWorkLocation(management.ChangeJobWorkLocationRequest) returns (google.protobuf.Empty);
     */
    changeJobWorkLocation(input: ChangeJobWorkLocationRequest, options?: RpcOptions): UnaryCall<ChangeJobWorkLocationRequest, Empty> {
        const method = this.methods[39], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeJobWorkLocationRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeJobStartDate(management.ChangeJobStartDateRequest) returns (google.protobuf.Empty);
     */
    changeJobStartDate(input: ChangeJobStartDateRequest, options?: RpcOptions): UnaryCall<ChangeJobStartDateRequest, Empty> {
        const method = this.methods[40], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeJobStartDateRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeJobSalary(management.ChangeJobSalaryRequest) returns (google.protobuf.Empty);
     */
    changeJobSalary(input: ChangeJobSalaryRequest, options?: RpcOptions): UnaryCall<ChangeJobSalaryRequest, Empty> {
        const method = this.methods[41], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeJobSalaryRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeJobCurrency(management.ChangeJobCurrencyRequest) returns (google.protobuf.Empty);
     */
    changeJobCurrency(input: ChangeJobCurrencyRequest, options?: RpcOptions): UnaryCall<ChangeJobCurrencyRequest, Empty> {
        const method = this.methods[42], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeJobCurrencyRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * -- delete
     *
     * @generated from protobuf rpc: RemoveJobInformation(management.RemoveJobInformationRequest) returns (google.protobuf.Empty);
     */
    removeJobInformation(input: RemoveJobInformationRequest, options?: RpcOptions): UnaryCall<RemoveJobInformationRequest, Empty> {
        const method = this.methods[43], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveJobInformationRequest, Empty>("unary", this._transport, method, opt, input);
    }
    // emergency information

    /**
     * -- insert
     *
     * @generated from protobuf rpc: CreateEmergencyInformation(management.CreateEmergencyInformationRequest) returns (google.protobuf.Empty);
     */
    createEmergencyInformation(input: CreateEmergencyInformationRequest, options?: RpcOptions): UnaryCall<CreateEmergencyInformationRequest, Empty> {
        const method = this.methods[44], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateEmergencyInformationRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddEmergencyInformationHealthCondition(management.AddEmergencyInformationHealthConditionRequest) returns (google.protobuf.Empty);
     */
    addEmergencyInformationHealthCondition(input: AddEmergencyInformationHealthConditionRequest, options?: RpcOptions): UnaryCall<AddEmergencyInformationHealthConditionRequest, Empty> {
        const method = this.methods[45], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddEmergencyInformationHealthConditionRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * -- read
     *
     * @generated from protobuf rpc: GetEmergencyInformation(management.GetEmergencyInformationRequest) returns (management.EmployeeEmergencyInformation);
     */
    getEmergencyInformation(input: GetEmergencyInformationRequest, options?: RpcOptions): UnaryCall<GetEmergencyInformationRequest, EmployeeEmergencyInformation> {
        const method = this.methods[46], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetEmergencyInformationRequest, EmployeeEmergencyInformation>("unary", this._transport, method, opt, input);
    }
    /**
     * -- update
     *
     * @generated from protobuf rpc: ChangeEmergencyInformationAddress(management.ChangeEmergencyInformationAddressRequest) returns (google.protobuf.Empty);
     */
    changeEmergencyInformationAddress(input: ChangeEmergencyInformationAddressRequest, options?: RpcOptions): UnaryCall<ChangeEmergencyInformationAddressRequest, Empty> {
        const method = this.methods[47], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmergencyInformationAddressRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmergencyInformationTelNumber(management.ChangeEmergencyInformationTelNumberRequest) returns (google.protobuf.Empty);
     */
    changeEmergencyInformationTelNumber(input: ChangeEmergencyInformationTelNumberRequest, options?: RpcOptions): UnaryCall<ChangeEmergencyInformationTelNumberRequest, Empty> {
        const method = this.methods[48], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmergencyInformationTelNumberRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmergencyInformationMobileNumber(management.ChangeEmergencyInformationMobileNumberRequest) returns (google.protobuf.Empty);
     */
    changeEmergencyInformationMobileNumber(input: ChangeEmergencyInformationMobileNumberRequest, options?: RpcOptions): UnaryCall<ChangeEmergencyInformationMobileNumberRequest, Empty> {
        const method = this.methods[49], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmergencyInformationMobileNumberRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeEmergencyInformationContactName(management.ChangeEmergencyInformationContactNameRequest) returns (google.protobuf.Empty);
     */
    changeEmergencyInformationContactName(input: ChangeEmergencyInformationContactNameRequest, options?: RpcOptions): UnaryCall<ChangeEmergencyInformationContactNameRequest, Empty> {
        const method = this.methods[50], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeEmergencyInformationContactNameRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * -- delete
     *
     * @generated from protobuf rpc: RemoveEmergencyInformation(management.RemoveEmergencyInformationRequest) returns (google.protobuf.Empty);
     */
    removeEmergencyInformation(input: RemoveEmergencyInformationRequest, options?: RpcOptions): UnaryCall<RemoveEmergencyInformationRequest, Empty> {
        const method = this.methods[51], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveEmergencyInformationRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveEmergencyInformationHealthCondition(management.RemoveEmergencyInformationHealthConditionRequest) returns (google.protobuf.Empty);
     */
    removeEmergencyInformationHealthCondition(input: RemoveEmergencyInformationHealthConditionRequest, options?: RpcOptions): UnaryCall<RemoveEmergencyInformationHealthConditionRequest, Empty> {
        const method = this.methods[52], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveEmergencyInformationHealthConditionRequest, Empty>("unary", this._transport, method, opt, input);
    }
    // personnel action notice

    /**
     * -- insert
     *
     * @generated from protobuf rpc: CreatePANEmployeeRequest(management.CreatePANRequest) returns (google.protobuf.Empty);
     */
    createPANEmployeeRequest(input: CreatePANRequest, options?: RpcOptions): UnaryCall<CreatePANRequest, Empty> {
        const method = this.methods[53], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreatePANRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * -- read
     *
     * @generated from protobuf rpc: GetPANInformation(management.GetPANInformationRequest) returns (management.PersonnelAction);
     */
    getPANInformation(input: GetPANInformationRequest, options?: RpcOptions): UnaryCall<GetPANInformationRequest, PersonnelAction> {
        const method = this.methods[54], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetPANInformationRequest, PersonnelAction>("unary", this._transport, method, opt, input);
    }
    /**
     * -- update
     *
     * @generated from protobuf rpc: ChangePANActionType(management.ChangePANActionTypeRequest) returns (google.protobuf.Empty);
     */
    changePANActionType(input: ChangePANActionTypeRequest, options?: RpcOptions): UnaryCall<ChangePANActionTypeRequest, Empty> {
        const method = this.methods[55], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangePANActionTypeRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangePANOldValue(management.ChangePANOldValueRequest) returns (google.protobuf.Empty);
     */
    changePANOldValue(input: ChangePANOldValueRequest, options?: RpcOptions): UnaryCall<ChangePANOldValueRequest, Empty> {
        const method = this.methods[56], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangePANOldValueRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangePANNewValue(management.ChangePANNewValueRequest) returns (google.protobuf.Empty);
     */
    changePANNewValue(input: ChangePANNewValueRequest, options?: RpcOptions): UnaryCall<ChangePANNewValueRequest, Empty> {
        const method = this.methods[57], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangePANNewValueRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangePANEffectiveDate(management.ChangePANEffectiveDateRequest) returns (google.protobuf.Empty);
     */
    changePANEffectiveDate(input: ChangePANEffectiveDateRequest, options?: RpcOptions): UnaryCall<ChangePANEffectiveDateRequest, Empty> {
        const method = this.methods[58], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangePANEffectiveDateRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ApprovePAN(management.ApprovePANRequest) returns (google.protobuf.Empty);
     */
    approvePAN(input: ApprovePANRequest, options?: RpcOptions): UnaryCall<ApprovePANRequest, Empty> {
        const method = this.methods[59], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApprovePANRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RejectPAN(management.RejectPANRequest) returns (google.protobuf.Empty);
     */
    rejectPAN(input: RejectPANRequest, options?: RpcOptions): UnaryCall<RejectPANRequest, Empty> {
        const method = this.methods[60], opt = this._transport.mergeOptions(options);
        return stackIntercept<RejectPANRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemovePANInformation(management.RemovePANInformationRequest) returns (google.protobuf.Empty);
     */
    removePANInformation(input: RemovePANInformationRequest, options?: RpcOptions): UnaryCall<RemovePANInformationRequest, Empty> {
        const method = this.methods[61], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemovePANInformationRequest, Empty>("unary", this._transport, method, opt, input);
    }
}

//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.6

use super::sea_orm_active_enums::PanActionStatus;
use super::sea_orm_active_enums::PanActionType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(schema_name = "logistics", table_name = "personnel_action")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub employee_id: Option<Uuid>,
    pub action_type: PanActionType,
    #[sea_orm(column_type = "Text", nullable)]
    pub old_value: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub new_value: Option<String>,
    pub effective_date: Date,
    pub status: PanActionStatus,
    pub requested_by: Uuid,
    pub approved_by: Uuid,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::employee::Entity",
        from = "Column::ApprovedBy",
        to = "super::employee::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Employee3,
    #[sea_orm(
        belongs_to = "super::employee::Entity",
        from = "Column::EmployeeId",
        to = "super::employee::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Employee2,
    #[sea_orm(
        belongs_to = "super::employee::Entity",
        from = "Column::RequestedBy",
        to = "super::employee::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Employee1,
}

impl ActiveModelBehavior for ActiveModel {}

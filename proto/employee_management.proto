syntax = "proto3";

package employee_management;

enum Role {
  SUPER_ADMIN = 0;
  ADMIN = 1;
  EMPLOYEE = 2;
  CLIENT = 3;
}

message User {
  string id = 1;
  string email = 2;
  Role role = 3;
  string created_at = 4;
  string updated_at = 5;
}

message InsertUserRequest {
  string email = 1;
  string password = 2;
  Role role = 3;
}

message GetUserRequest {
  oneof identifier {
    string id = 1;    // optional
    string email = 2; // optional
    Role role = 3;    // optional
  }
}

message UpdateUserEmailRequest {
  string id = 1;
  string current_email = 2;
  string new_email = 3;
}

message UpdateUserPasswordRequest {
  string id = 1;
  string current_password = 2;
  string new_password = 3;
}

message UpdateUserRoleRequest {
  string id = 1;
  Role role = 2;
}

message DeleteUserRequest { string id = 1; }

message Empty {}

service UserService {
  rpc InsertUser(InsertUserRequest) returns (User) {}
  rpc GetUser(GetUserRequest) returns (User) {}
  rpc GetUsers(GetUserRequest) returns (stream User) {}
  rpc UpdateUserEmail(UpdateUserEmailRequest) returns (User) {}
  rpc UpdateUserPassword(UpdateUserPasswordRequest) returns (User) {}
  rpc UpdateUserRole(UpdateUserRoleRequest) returns (User) {}
  rpc DeleteUser(DeleteUserRequest) returns (Empty) {}
}

// -- File --
message File {
  string id = 1;
  string name = 2;
  string path = 3;
  User owner = 4;
  string created_at = 5;
  string updated_at = 6;
}

message GetFileRequest { string id = 1; }

message UpdateFileRequest {
  string id = 1;
  oneof identifier {
    string name = 2;
    string owner_id = 3;
  }
}

message DeleteFileRequest { string id = 1; }

service FileService {
  rpc GetFile(GetFileRequest) returns (File) {}
  rpc UpdateFile(UpdateFileRequest) returns (File) {}
  rpc DeleteFile(DeleteFileRequest) returns (Empty) {}
}

// -- Employee --

enum ContractType {
  FULLTIME = 0;
  PARTTIME = 1;
}

enum Sex {
  MALE = 0;
  FEMALE = 1;
}

message Employee {
  string id = 1;
  User user = 2;
  string first_name = 3;
  string middle_name = 4;
  string last_name = 5;
  Sex sex = 6;
  string address = 7;
  string position = 8;
  string contact_number = 9;
  ContractType contract_type = 10; // "fulltime, parttime"
  string birthday = 11;
  string created_at = 12;
  string updated_at = 13;
}

message InsertEmployeeRequest {
  string user_id = 1;
  string first_name = 2;
  string middle_name = 3;
  string last_name = 4;
  Sex sex = 5;
  string address = 6;
  string position = 7;
  string contact_number = 8;
  ContractType contract_type = 9;
  string birthday = 10;
}

message GetEmployeeRequest {
  oneof identifier {
    string id = 1;
    string user_id = 2;
    string contact_number = 3;
    ContractType contract_type = 4;
  }
}

message UpdateEmployeeRequest {
  string id = 1;
  oneof identifier {
    string new_first_name = 2;
    string new_middle_name = 3;
    string new_last_name = 4;
    Sex new_sex = 5;
    string new_address = 6;
    string new_position = 7;
    string new_contact_number = 8;
    ContractType new_contract_type = 9;
  }
}

message DeleteEmployeeRequest { string id = 1; }

service EmployeeService {
  rpc InsertEmployee(InsertEmployeeRequest) returns (Employee) {}
  rpc GetEmployee(GetEmployeeRequest) returns (Employee) {}
  rpc UpdateEmployee(UpdateEmployeeRequest) returns (Employee) {}
  rpc DeleteEmployee(DeleteEmployeeRequest) returns (Empty) {}
}

// -- Task --

enum TaskStatus {
  UNASSIGNED = 0;
  IN_PROGRESS = 1;
  REVIEW = 2;
  DONE = 3;
}

message Task {
  string id = 1;
  string title = 2;
  string description = 3;
  TaskStatus status = 4;
  Employee issued_by_user = 5;
  repeated Employee assigned_to = 6;
  repeated TaskComment comments = 7;
  string deadline = 8;
  string created_at = 9;
  string updated_at = 10;
}

message InsertTaskRequest {
  string title = 1;
  string description = 2;
  TaskStatus status = 3;
  string issued_by_user = 4;
  string deadline = 5;
}

message GetTaskRequest {
  oneof identifier {
    string id = 1;
    string title = 2;
    TaskStatus status = 3;
    string issued_by_user = 4;
    string deadline = 5;
  }
}

message UpdateTaskRequest {
  string id = 1;
  oneof identifier {
    string new_title = 2;
    string new_description = 3;
    TaskStatus new_status = 4;
    string new_issued_by_user = 5;
    string new_deadline = 6;
  }
}

message DeleteTaskRequest { string id = 1; }

service TaskService {
  rpc InsertTask(InsertTaskRequest) returns (Task) {}
  rpc GetTask(GetTaskRequest) returns (Task) {}
  rpc UpdateTask(UpdateTaskRequest) returns (Task) {}
  rpc DeleteTask(DeleteTaskRequest) returns (Empty) {}
}

// -- Task Comment --

message TaskComment {
  string id = 1;
  Task task = 2;
  Employee employee = 3;
  string comment = 4;
  File attachment = 5;
  string created_at = 6;
  string updated_at = 7;
}

message InsertTaskCommentRequest {
  string task_id = 1;
  string user_id = 2;
  string comment = 3;
}

message GetTaskCommentRequest {
  oneof identifier {
    string id = 1;
    string task_id = 2;
    string user_id = 3;
  }
}

message UpdateTaskCommentRequest {
  string id = 1;
  string new_comment = 2;
}

message DeleteTaskCommentRequest { string id = 1; }

service TaskCommentService {
  rpc InsertTaskComment(InsertTaskCommentRequest) returns (TaskComment) {}
  rpc GetTaskComment(GetTaskCommentRequest) returns (TaskComment) {}
  rpc UpdateTaskComment(UpdateTaskCommentRequest) returns (TaskComment) {}
  rpc DeleteTaskComment(DeleteTaskCommentRequest) returns (Empty) {}
}

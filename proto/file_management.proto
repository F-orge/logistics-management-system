syntax = "proto3";

package file_management;

service FileManagement {
    rpc CreateFile (CreateFileRequest) returns (FileResponse);
    rpc UploadFile (stream UploadFileRequest) returns (FileResponse);
    
    rpc GetFile (GetFileRequest) returns (FileResponse);
    rpc ListFiles (ListFilesRequest) returns (ListFilesResponse);
    rpc DownloadFile (DownloadFileRequest) returns (stream FileChunk);
    
    rpc UpdateFile (UpdateFileRequest) returns (FileResponse);
    rpc UpdateFileStatus (UpdateFileStatusRequest) returns (FileResponse);
    
    rpc DeleteFile (DeleteFileRequest) returns (DeleteFileResponse);
}
message CreateFileRequest {
    string name = 1;
    string path = 2;
    string mime_type = 3;
    uint64 size = 4;
    FileStatus status = 5;
    string system_origin = 6;
    string created_by = 7;
    repeated string tags = 8;
    string description = 9;
}

message UploadFileRequest {
    oneof data {
        FileInfo file_info = 1;
        bytes chunk_data = 2;
    }
}

message FileInfo {
    string name = 1;
    string mime_type = 2;
    string system_origin = 3;
    string created_by = 4;
    repeated string tags = 5;
    string description = 6;
}

message GetFileRequest {
    string file_id = 1;
}

message ListFilesRequest {
    uint32 page = 1;
    uint32 page_size = 2;
    FileStatus status = 3;
    string system_origin = 4;
    repeated string tags = 5;
    string search_term = 6;
    string created_by = 7;
    FileSort sort_by = 8;
    bool ascending = 9;
}

message UpdateFileRequest {
    string file_id = 1;
    optional string name = 2;
    optional string path = 3;
    optional string description = 4;
    repeated string tags = 5;
}

message UpdateFileStatusRequest {
    string file_id = 1;
    FileStatus status = 2;
}

message DeleteFileRequest {
    string file_id = 1;
    bool hard_delete = 2;
}

message DownloadFileRequest {
    string file_id = 1;
}

message FileResponse {
    string id = 1;
    string name = 2;
    string path = 3;
    string mime_type = 4;
    uint64 size = 5;
    FileStatus status = 6;
    string system_origin = 7;
    string created_by = 8;
    string created_at = 9;
    string updated_at = 10;
    repeated string tags = 11;
    string description = 12;
    optional string last_accessed_at = 13;
    optional string deleted_at = 14;
}

message ListFilesResponse {
    repeated FileResponse files = 1;
    uint32 total_count = 2;
    uint32 page = 3;
    uint32 page_size = 4;
}

message DeleteFileResponse {
    string file_id = 1;
    bool success = 2;
}

message FileChunk {
    bytes content = 1;
}

enum FileStatus {
    FILE_STATUS_UNSPECIFIED = 0;
    FILE_STATUS_ACTIVE = 1;
    FILE_STATUS_ARCHIVED = 2;
    FILE_STATUS_DELETED = 3;
}

enum FileSort {
    FILE_SORT_UNSPECIFIED = 0;
    FILE_SORT_NAME = 1;
    FILE_SORT_CREATED_AT = 2;
    FILE_SORT_UPDATED_AT = 3;
    FILE_SORT_SIZE = 4;
}

message FileError {
    string file_id = 1;
    string error_message = 2;
    FileErrorCode error_code = 3;
}

enum FileErrorCode {
    FILE_ERROR_UNSPECIFIED = 0;
    FILE_ERROR_NOT_FOUND = 1;
    FILE_ERROR_PERMISSION_DENIED = 2;
    FILE_ERROR_INVALID_STATUS = 3;
    FILE_ERROR_STORAGE_FAILED = 4;
    FILE_ERROR_SIZE_EXCEEDED = 5;
    FILE_ERROR_INVALID_TYPE = 6;
}
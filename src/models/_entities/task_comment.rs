//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(schema_name = "etmar_logistics", table_name = "task_comment")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub task_id: Uuid,
    pub employee_id: Uuid,
    #[sea_orm(column_type = "Text")]
    pub comment: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::employee::Entity",
        from = "Column::EmployeeId",
        to = "super::employee::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Employee,
    #[sea_orm(
        belongs_to = "super::task::Entity",
        from = "Column::TaskId",
        to = "super::task::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Task,
    #[sea_orm(has_many = "super::task_comment_file_attachment::Entity")]
    TaskCommentFileAttachment,
}

impl Related<super::employee::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Employee.def()
    }
}

impl Related<super::task::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Task.def()
    }
}

impl Related<super::task_comment_file_attachment::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TaskCommentFileAttachment.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
